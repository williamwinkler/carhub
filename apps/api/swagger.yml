openapi: 3.0.0
paths:
  /v1/cars:
    post:
      operationId: CarsController_create_v1
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCarDto"
      responses:
        "201":
          errors:
            - status: 409
              message: Car model already exists. Ensure the model name is new and unqiue
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "409":
          description: Car model already exists. Ensure the model name is new and unqiue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MODEL_ALREADY_EXISTS Error
                  value:
                    statusCode: 409
                    errorCode: CAR_MODEL_ALREADY_EXISTS
                    message: Car model already exists. Ensure the model name is new and unqiue
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Create a car
      tags: &a1
        - Cars
      security:
        - bearer: []
        - apiKey: []
    get:
      operationId: CarsController_findAll_v1
      parameters:
        - name: sortDirection
          required: false
          in: query
          description: Sort direction (ascending or descending)
          schema:
            type: string
        - name: sortField
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: The limit of items to be returned.
          schema:
            type: number
            default: 0
        - name: skip
          required: false
          in: query
          description: The amount of items to skip.
          schema:
            type: number
            default: 0
        - name: color
          required: false
          in: query
          description: The color of the car
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: manufacturerId
          required: false
          in: query
          description: The slug of the car manufacturer
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: modelSlug
          required: false
          in: query
          description: The unique id of the car model (UUID)
          schema:
            type: string
      responses:
        "200":
          description: List of cars
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponseListDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: List cars
      tags: *a1
  /v1/cars/{id}:
    get:
      operationId: CarsController_findOne_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car (UUID)
          schema:
            type: string
      responses:
        "200":
          errors:
            - status: 404
              message: Car not found
          description: Car successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "404":
          description: Car not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_NOT_FOUND
                    message: Car not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Get a car
      tags: *a1
    put:
      operationId: CarsController_update_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car (UUID)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCarDto"
      responses:
        "200":
          errors:
            - status: 404
              message: Car not found
          description: Car was successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_NOT_FOUND
                    message: Car not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Update a car
      tags: *a1
      security:
        - bearer: []
        - apiKey: []
    delete:
      operationId: CarsController_remove_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car (UUID)
          schema:
            type: string
      responses:
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_NOT_FOUND
                    message: Car not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Delete a car
      tags: *a1
      security:
        - bearer: []
        - apiKey: []
  /v1/cars/{id}/favorite:
    patch:
      operationId: CarsController_toggleFavorite_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car (UUID)
          schema:
            type: string
      responses:
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_NOT_FOUND
                    message: Car not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Toggle favorite status for a car
      tags: *a1
      security:
        - bearer: []
        - apiKey: []
  /v1/cars/favorites:
    get:
      operationId: CarsController_getFavorites_v1
      parameters:
        - name: limit
          required: false
          in: query
          description: The limit of items to be returned.
          schema:
            type: number
            default: 0
        - name: skip
          required: false
          in: query
          description: The amount of items to skip.
          schema:
            type: number
            default: 0
      responses:
        "200":
          description: User's favorite cars retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponseListDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Get user's favorite cars
      tags: *a1
      security:
        - bearer: []
        - apiKey: []
  /v1/car-manufacturers:
    post:
      operationId: CarManufacturersController_create_v1
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCarManufacturerDto"
      responses:
        "201":
          errors:
            - status: 409
              message: Car manufacturer already exists
          description: Car manufacturer created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarManufacturerResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "409":
          description: Car manufacturer already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MANUFACTURER_ALREADY_EXISTS Error
                  value:
                    statusCode: 409
                    errorCode: CAR_MANUFACTURER_ALREADY_EXISTS
                    message: Car manufacturer already exists
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Create a car manufacturer
      tags: &a2
        - CarManufacturers
      security:
        - bearer: []
        - apiKey: []
    get:
      operationId: CarManufacturersController_findAll_v1
      parameters:
        - name: sortDirection
          required: false
          in: query
          description: Sort direction (ascending or descending)
          schema:
            type: string
        - name: sortField
          required: false
          in: query
          description: Field to sort car manufacturers by
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: The limit of items to be returned.
          schema:
            type: number
            default: 0
        - name: skip
          required: false
          in: query
          description: The amount of items to skip.
          schema:
            type: number
            default: 0
      responses:
        "200":
          description: List of car manufacturers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarManufacturerResponseListDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: List car manufacturers
      tags: *a2
  /v1/car-manufacturers/{id}:
    get:
      operationId: CarManufacturersController_findOne_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car manufacturer (UUID)
          schema:
            type: string
      responses:
        "200":
          errors:
            - status: 404
              message: Car manufacturer not found
          description: Car manufacturer successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarManufacturerResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "404":
          description: Car manufacturer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MANUFACTURER_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MANUFACTURER_NOT_FOUND
                    message: Car manufacturer not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Get a car manufacturer
      tags: *a2
    put:
      operationId: CarManufacturersController_update_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car manufacturer (UUID)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCarManufacturerDto"
      responses:
        "200":
          errors:
            - status: 404
              message: Car manufacturer not found
          description: Car manufacturer was successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarManufacturerResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car manufacturer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MANUFACTURER_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MANUFACTURER_NOT_FOUND
                    message: Car manufacturer not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Update a car manufacturer
      tags: *a2
      security:
        - bearer: []
        - apiKey: []
    delete:
      operationId: CarManufacturersController_remove_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car manufacturer (UUID)
          schema:
            type: string
      responses:
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car manufacturer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MANUFACTURER_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MANUFACTURER_NOT_FOUND
                    message: Car manufacturer not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Delete a car manufacturer
      tags: *a2
      security:
        - bearer: []
        - apiKey: []
  /v1/car-models:
    post:
      operationId: CarModelsController_create_v1
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCarModelDto"
      responses:
        "201":
          errors:
            - status: 404
              message: Car manufacturer not found
          description: Car model created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarModelResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car manufacturer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MANUFACTURER_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MANUFACTURER_NOT_FOUND
                    message: Car manufacturer not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Create a car model
      tags: &a3
        - CarModels
      security:
        - bearer: []
        - apiKey: []
    get:
      operationId: CarModelsController_findAll_v1
      parameters:
        - name: sortDirection
          required: false
          in: query
          description: Sort direction (ascending or descending)
          schema:
            type: string
        - name: sortField
          required: false
          in: query
          description: Field to sort car models by
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: The limit of items to be returned.
          schema:
            type: number
            default: 0
        - name: skip
          required: false
          in: query
          description: The amount of items to skip.
          schema:
            type: number
            default: 0
        - name: manufacturerSlug
          required: false
          in: query
          description: The slug of the car model
          schema:
            type: string
            minLength: 1
            maxLength: 255
      responses:
        "200":
          description: List of car models
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarModelResponseListDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: List car models
      tags: *a3
  /v1/car-models/{id}:
    get:
      operationId: CarModelsController_findOne_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car model (UUID)
          schema:
            type: string
      responses:
        "200":
          errors:
            - status: 404
              message: Car model not found
          description: Car model successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarModelResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "404":
          description: Car model not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MODEL_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MODEL_NOT_FOUND
                    message: Car model not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Get a car model
      tags: *a3
    put:
      operationId: CarModelsController_update_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car model (UUID)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCarModelDto"
      responses:
        "200":
          errors:
            - status: 404
              message: Car model not found
          description: Car model was successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarModelResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car model not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MODEL_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MODEL_NOT_FOUND
                    message: Car model not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Update a car model
      tags: *a3
      security:
        - bearer: []
        - apiKey: []
    delete:
      operationId: CarModelsController_remove_v1
      parameters:
        - name: id
          required: true
          in: path
          description: The unique id of the car model (UUID)
          schema:
            type: string
      responses:
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "401":
          description: You need to be authorized to perform this action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNAUTHORIZED Error
                  value:
                    statusCode: 401
                    errorCode: UNAUTHORIZED
                    message: You need to be authorized to perform this action
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: FORBIDDEN Error
                  value:
                    statusCode: 403
                    errorCode: FORBIDDEN
                    message: Forbidden
        "404":
          description: Car model not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MODEL_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MODEL_NOT_FOUND
                    message: Car model not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Delete a car model
      tags: *a3
      security:
        - bearer: []
        - apiKey: []
  /v1/car-models/slug/{slug}:
    get:
      operationId: CarModelsController_findBySlug_v1
      parameters:
        - name: slug
          required: true
          in: path
          description: The slug of the car model
          schema:
            type: string
            minLength: 1
            maxLength: 255
      responses:
        "200":
          errors:
            - status: 404
              message: Car model not found
          description: Car model succesfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarModelResponseDto"
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: VALIDATION_ERROR Error
                  value:
                    statusCode: 400
                    errorCode: VALIDATION_ERROR
                    message: Validation failed
                    errors:
                      - field: email
                        message: Invalid email format
                        code: invalid_string
                      - field: age
                        message: Must be at least 18
                        code: too_small
        "404":
          description: Car model not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: CAR_MODEL_NOT_FOUND Error
                  value:
                    statusCode: 404
                    errorCode: CAR_MODEL_NOT_FOUND
                    message: Car model not found
        "429":
          description: Too many requests, try again later
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: TOO_MANY_REQUESTS Error
                  value:
                    statusCode: 429
                    errorCode: TOO_MANY_REQUESTS
                    message: Too many requests, try again later
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
              examples:
                default:
                  summary: UNEXPECTED_ERROR Error
                  value:
                    statusCode: 500
                    errorCode: UNEXPECTED_ERROR
                    message: An unexpected error occurred
      summary: Get a car model by it's slug
      tags: *a3
info:
  title: 🔥 Next Gen Nestjs API
  description: Demo API to showcase autogenerated Swagger docs from Zod schemas and tRPC.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    ErrorDto:
      type: object
      properties:
        statusCode:
          description: The HTTP status code
          type: number
          enum:
            - 100
            - 101
            - 102
            - 103
            - 200
            - 201
            - 202
            - 203
            - 204
            - 205
            - 206
            - 207
            - 208
            - 210
            - 300
            - 301
            - 302
            - 303
            - 304
            - 307
            - 308
            - 400
            - 401
            - 402
            - 403
            - 404
            - 405
            - 406
            - 407
            - 408
            - 409
            - 410
            - 411
            - 412
            - 413
            - 414
            - 415
            - 416
            - 417
            - 418
            - 421
            - 422
            - 423
            - 424
            - 428
            - 429
            - 456
            - 500
            - 501
            - 502
            - 503
            - 504
            - 505
            - 507
            - 508
        errorCode:
          description: The application specific error code
          type: string
        message:
          description: The error message
          type: string
        errors:
          description: Zod validation errors
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              code:
                type: string
            required:
              - field
              - message
              - code
      required:
        - statusCode
        - errorCode
        - message
    CreateCarDto:
      type: object
      properties:
        modelId:
          description: The unique id of the car model (UUID)
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
        year:
          description: The year the car was manufactured
          type: integer
          minimum: 1886
          maximum: 2026
          x-nestjs_zod-parent-additional-properties: false
        color:
          description: The color of the car
          type: string
          minLength: 1
          maxLength: 100
          x-nestjs_zod-parent-additional-properties: false
        kmDriven:
          description: The amount of kilometers the car has driven
          type: integer
          minimum: 0
          maximum: 10000000
          x-nestjs_zod-parent-additional-properties: false
        price:
          description: Price of the car in €
          type: integer
          minimum: 0
          maximum: 9007199254740991
          x-nestjs_zod-parent-additional-properties: false
      required:
        - modelId
        - year
        - color
        - kmDriven
        - price
    CarDto:
      type: object
      properties:
        id:
          description: The unique id of the car (UUID)
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
        year:
          description: The year the car was manufactured
          type: integer
          minimum: 1886
          maximum: 2026
          x-nestjs_zod-parent-additional-properties: false
        color:
          description: The color of the car
          type: string
          minLength: 1
          maxLength: 100
          x-nestjs_zod-parent-additional-properties: false
        kmDriven:
          description: The amount of kilometers the car has driven
          type: integer
          minimum: 0
          maximum: 10000000
          x-nestjs_zod-parent-additional-properties: false
        price:
          description: Price of the car in €
          type: integer
          minimum: 0
          maximum: 9007199254740991
          x-nestjs_zod-parent-additional-properties: false
        createdBy:
          type: object
          properties:
            id:
              description: The ID of the user
              type: string
              format: uuid
              pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
            firstName:
              description: First name of the user
              type: string
            lastName:
              description: Last name of the user
              type: string
          required:
            - id
            - firstName
            - lastName
          x-nestjs_zod-parent-additional-properties: false
        createdAt:
          description: When the car record was created
          type: string
          format: date-time
          pattern: ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
          x-nestjs_zod-parent-additional-properties: false
        updatedAt:
          description: When the car record was last updated
          type: string
          format: date-time
          pattern: ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
          x-nestjs_zod-parent-additional-properties: false
        isFavorite:
          description: Indicates if the user has favorited the car or not
          type: boolean
          x-nestjs_zod-parent-additional-properties: false
        model:
          type: object
          properties:
            id:
              description: The unique id of the car model (UUID)
              type: string
              format: uuid
              pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
            name:
              description: The name of the car model
              type: string
              minLength: 1
              maxLength: 255
            slug:
              description: The slug of the car model
              type: string
              minLength: 1
              maxLength: 255
            manufacturer:
              type: object
              properties:
                id:
                  description: The unique id of the car manufacturer (UUID)
                  type: string
                  format: uuid
                  pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
                name:
                  description: The name of the car manufacturer
                  type: string
                  minLength: 1
                  maxLength: 255
                slug:
                  description: The slug of the car manufacturer
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
                - id
                - name
                - slug
              additionalProperties: false
          required:
            - id
            - name
            - slug
          additionalProperties: false
          x-nestjs_zod-parent-additional-properties: false
      required:
        - id
        - year
        - color
        - kmDriven
        - price
        - createdAt
        - updatedAt
    CarResponseDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/CarDto"
      required:
        - apiVersion
        - data
    MetaPaginationDto:
      type: object
      properties:
        totalItems:
          type: number
          description: The total number of items available across all pages
        limit:
          type: number
          description: The limit of items
        skipped:
          type: number
          description: Items skipped
        count:
          type: number
          description: The count of items
      required:
        - totalItems
        - limit
        - skipped
        - count
    PaginatedItemsDto:
      type: object
      properties:
        items:
          description: List of CarDto items
          type: array
          items:
            $ref: "#/components/schemas/CarDto"
        meta:
          description: Metadata for pagination
          allOf:
            - $ref: "#/components/schemas/MetaPaginationDto"
      required:
        - items
        - meta
    CarResponseListDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/PaginatedItemsDto"
      required:
        - apiVersion
        - data
    UpdateCarDto:
      type: object
      properties:
        modelId:
          description: The unique id of the car model (UUID)
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
        year:
          description: The year the car was manufactured
          type: integer
          minimum: 1886
          maximum: 2026
          x-nestjs_zod-parent-additional-properties: false
        color:
          description: The color of the car
          type: string
          minLength: 1
          maxLength: 100
          x-nestjs_zod-parent-additional-properties: false
        kmDriven:
          description: The amount of kilometers the car has driven
          type: integer
          minimum: 0
          maximum: 10000000
          x-nestjs_zod-parent-additional-properties: false
        price:
          description: Price of the car in €
          type: integer
          minimum: 0
          maximum: 9007199254740991
          x-nestjs_zod-parent-additional-properties: false
    CreateCarManufacturerDto:
      type: object
      properties:
        name:
          description: The name of the car manufacturer
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
      required:
        - name
    CarManufacturerDto:
      type: object
      properties:
        id:
          description: The unique id of the car manufacturer (UUID)
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
        name:
          description: The name of the car manufacturer
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
        slug:
          description: The slug of the car manufacturer
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
      required:
        - id
        - name
        - slug
    CarManufacturerResponseDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/CarManufacturerDto"
      required:
        - apiVersion
        - data
    CarManufacturerResponseListDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/PaginatedItemsDto"
      required:
        - apiVersion
        - data
    UpdateCarManufacturerDto:
      type: object
      properties:
        name:
          description: The name of the car manufacturer
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
    CreateCarModelDto:
      type: object
      properties:
        name:
          description: The name of the car model
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
        manufacturerId:
          description: The manufacturer ID this model belongs to
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
      required:
        - name
        - manufacturerId
    CarModelDto:
      type: object
      properties:
        id:
          description: The unique id of the car model (UUID)
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
        name:
          description: The name of the car model
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
        slug:
          description: The slug of the car model
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
        manufacturer:
          type: object
          properties:
            id:
              description: The unique id of the car manufacturer (UUID)
              type: string
              format: uuid
              pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
            name:
              description: The name of the car manufacturer
              type: string
              minLength: 1
              maxLength: 255
            slug:
              description: The slug of the car manufacturer
              type: string
              minLength: 1
              maxLength: 255
          required:
            - id
            - name
            - slug
          additionalProperties: false
          x-nestjs_zod-parent-additional-properties: false
      required:
        - id
        - name
        - slug
    CarModelResponseDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/CarModelDto"
      required:
        - apiVersion
        - data
    CarModelResponseListDto:
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
          example: 1.0.0
        data:
          description: The data of the response
          allOf:
            - $ref: "#/components/schemas/PaginatedItemsDto"
      required:
        - apiVersion
        - data
    UpdateCarModelDto:
      type: object
      properties:
        name:
          description: The name of the car model
          type: string
          minLength: 1
          maxLength: 255
          x-nestjs_zod-parent-additional-properties: false
        manufacturerId:
          description: The manufacturer ID this model belongs to
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          x-nestjs_zod-parent-additional-properties: false
